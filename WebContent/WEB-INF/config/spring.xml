<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
	http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop   
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
	http://www.springframework.org/schema/task    
	http://www.springframework.org/schema/task/spring-task-4.0.xsd 
	http://www.springframework.org/schema/tx    
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
	http://www.springframework.org/schema/data/jpa
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- 1.配置开关 -->
	<!-- *启动注解 -->
	<context:annotation-config />
	<!-- *启动切面 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- <mvc:annotation-driven /> -->
	<!-- *定时任务 -->
	<!-- <task:annotation-driven /> -->
	<!-- executor线程池，含义和java.util.concurrent.Executor是一样的,pool-size的大小官方推荐为5~10 -->
    <task:executor id="executor" pool-size="5" />
    <!-- scheduler的pool-size是ScheduledExecutorService线程池，默认为1 -->
    <task:scheduler id="scheduler" pool-size="5" />
    <task:annotation-driven executor="executor" scheduler="scheduler" />


	<!-- 2.扫描web组件,完成bean的创建以及自动依赖注入 -->
	<!-- wings FW -->
	<context:component-scan base-package="com.xpizza.wings.basefunction.controller,
										  com.xpizza.wings.basefunction.service,
										  com.xpizza.wings.basefunction.dao,
										  com.xpizza.wings.aop.aspect,
										  com.xpizza.wings.component.scheduler" />
	<!-- landscape FW -->
	<context:component-scan base-package="com.xpizza.landscape.basefunction.controller,
										  com.xpizza.landscape.basefunction.service,
										  com.xpizza.landscape.basefunction.dao,
										  com.xpizza.landscape.aop.aspect,
										  com.xpizza.landscape.component.scheduler" />


	<!-- 3.spring mvc -->
	<!-- 3.1.启动spring mvc注解,完成请求和注解的POJO映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- 3.2.对模型视图名称的解析(对模型视图名称添加前后缀) -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/view/" p:order="1" p:suffix=".html" />
	<!-- 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/view/" p:order="2" p:suffix=".jsp" />
	 -->


	<!-- 4.其它Web组件 -->
	<!-- 4.1.自定义拦截器 -->
	<mvc:interceptors>
		<bean id="lawlessAuthInterceptor" class="com.xpizza.wings.component.filter.LawlessAuthInterceptor"></bean>
	</mvc:interceptors>

	<!-- 4.2.resolvers -->
	<mvc:annotation-driven>
		<!-- 自定义参数解释器 -->
		<mvc:argument-resolvers>
			<!-- wings -->
			<bean class="com.xpizza.wings.component.resolver.SessionArgumentResolver" lazy-init="false"/>
			<!-- landscape -->
			<bean class="com.xpizza.landscape.component.resolver.MobileArgumentResolver" lazy-init="false"/> 
    	</mvc:argument-resolvers>
	</mvc:annotation-driven>
	<!-- 通用页面设置 -->
	<!-- wings -->
	<bean id="genericExceptionResolver" class="com.xpizza.wings.component.resolver.GenericExceptionResolver"/>
	
	
	<!-- ***********************************************************以下是需要自定义的配置*********************************************************** -->

	<!-- 1.数据层 -->
	<!-- 1.1.数据源配置 -->
	<!-- 读取properties文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<bean id="mainDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${xpizza.driverClassName}" />
		<property name="url" value="${xpizza.url}" />
		<property name="username" value="${xpizza.username}" />
		<property name="password" value="${xpizza.password}" />
	</bean>
	
	<!-- JNDI方式 -->
    <!-- 
	<bean id="mainDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName">
            <value>java:comp/env/xxx</value>
        </property>
    </bean>
	-->

	<!-- 1.2.配置jdbc的模板类JdbcTemplate -->
	<bean id="mainJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="mainDataSource" />
	</bean>

	<!-- 1.3.事务 -->
	<bean id="mainTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" depends-on="mainDataSource">
		<property name="dataSource" ref="mainDataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="mainTxManager" proxy-target-class="true" />
	
	<!-- spring data jpa BEGIN(如果不需要JPA,可以删除这部分) -->
	<jpa:repositories base-package="com.xpizza.shinning.dao" />
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="dataSource" ref="mainDataSource"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!--自动创建表配置 -->
				<!-- 同步表结构策略: create | create-drop | update | validate -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!--结果滚动集，跟分页有关 -->
				<prop key="jdbc.use_scrollable_resultset">false</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<!-- from wings -->
				<value>com.xpizza.wings.domain</value>
				<!-- from landscape -->
				<value>com.xpizza.landscape.domain</value>
				<!-- your system -->
				<value>com.xpizza.shinning.domain</value>
			</list>
		</property>
	</bean>
	<bean id="jpaTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="jpaTxManager" />
	<!-- spring data jpa END(如果不需要JPA,可以删除这部分) --> 
	
</beans>
